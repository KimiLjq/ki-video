<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stu.video.mapper.UserLikeVideoDao">

    <resultMap id="BaseResultMap" type="com.stu.video.entity.UserLikeVideo">
        <!--@Table user_like_video-->
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="videoId" column="video_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        username, video_id, create_time
    </sql>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from myshortvideo.user_like_video
        <where>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="videoId != null and videoId != ''">
                and video_id = #{videoId}
            </if>
        </where>
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from myshortvideo.user_like_video
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from myshortvideo.user_like_video
        <where>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="videoId != null">
                and video_id = #{videoId}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="username" useGeneratedKeys="true">
        insert into myshortvideo.user_like_video(username, video_id, create_time)
        values (#{username}, #{videoId}, default)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update myshortvideo.user_like_video
        <set>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where username = #{username}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from myshortvideo.user_like_video where username = #{username} and video_id = #{videoId}
    </delete>

    <select id="queryLikeVideo" resultType="com.stu.video.entity.Video">
        select
            a.id, a.author, a.title, a.poster, a.video_url videoUrl, a.type, a.first_type firstType,
            a.second_type secondType, a.video_desc videoDesc,
            a.video_second videoSecond, a.amount, a.like_count likeCount, b.create_time createTime
        from myshortvideo.video as a
        right join
        myshortvideo.user_like_video as b
        on a.id = b.video_id
        where b.username = #{username}
    </select>

</mapper>